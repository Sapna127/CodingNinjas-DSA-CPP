Given a sorted integer array A of size n, which contains all unique elements. You need to construct a balanced BST from this input array. Return the root of constructed BST.
Note: If array size is even, take first mid as root.

----------------

BinaryTreeNode<int> *bst(int input[], int s, int e)
{
	if (s > e)
		return NULL;
	int mid = (s + e) / 2;
	BinaryTreeNode<int> *root = new BinaryTreeNode<int>(input[mid]);
	root->left = bst(input, s, mid - 1);
	root->right = bst(input, mid + 1, e);
	return root;
}
BinaryTreeNode<int> *constructTree(int *input, int n)
{
	bst(input, 0, n - 1);
}
